{"version":3,"file":"678.js","mappings":"8OAeA,QATiB,SAAIA,GACnB,I,IAA+CC,G,GAArBC,EAAAA,EAAAA,UAASF,G,EAAY,E,k5BAAxCG,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAKtB,MAAO,CAACE,GAJQE,EAAAA,EAAAA,cAAY,SAACC,GAE3BF,EAASE,EAAEC,OAAOJ,MACpB,GAAG,IACqBC,EAC1B,C,kHCXaI,GAAMC,EAAAA,EAAAA,GAAA,UAAAF,OAAA,YAAAE,CAAA,CAAAC,KAAA,SAAAC,OAAA,qNAWNC,GAAIH,EAAAA,EAAAA,GAAA,QAAAF,OAAA,YAAAE,CAAA,CAAAC,KAAA,UAAAC,OAAA,8CAMJE,GAAKJ,EAAAA,EAAAA,GAAA,SAAAF,OAAA,YAAAE,CAAA,CAAAC,KAAA,UAAAC,OAAA,sJAaLG,GAAKL,EAAAA,EAAAA,GAAA,SAAAF,OAAA,YAAAE,CAAA,CAAAC,KAAA,SAAAC,OAAA,ikBAsBLI,GAAMN,EAAAA,EAAAA,GAAA,UAAAF,OAAA,YAAAE,CAAA,CAAAC,KAAA,UAAAC,OAAA,6eA4BNK,GAAKP,EAAAA,EAAAA,GAAA,OAAAF,OAAA,YAAAE,CAAA,CAAAC,KAAA,UAAAC,OAAA,qDAMLM,GAAOR,EAAAA,EAAAA,GAAA,OAAAF,OAAA,YAAAE,CAAA,CAAAC,KAAA,UAAAC,OAAA,mCAKPO,GAAaT,EAAAA,EAAAA,GAAA,KAAAF,OAAA,YAAAE,CAAA,CAAAC,KAAA,SAAAC,OAAA,0K,0DCpF1B,QAPgB,SAACQ,GAAW,OAC1BC,IAAAA,IACOD,EAAK,CACRE,iBAAiB,IAElBC,MAAK,SAACC,GAAG,OAAKA,EAAIC,IAAI,GAAC,C","sources":["webpack://sanstalk/./hooks/useInput.ts","webpack://sanstalk/./pages/SignUp/styles.tsx","webpack://sanstalk/./utils/fetcher.ts"],"sourcesContent":["import { ChangeEvent, Dispatch, SetStateAction, useCallback, useState } from 'react';\n\n//return타입 = [T, (e: any) => void, Dispatch<SetStateAction<T>>]\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\n//any 대신 ChangeEvent<HTMLInputElement>\n//제너릭타입\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    //e.target.value 대신 e.target.value as unknown as T 넣으면 해결\n    setValue(e.target.value as unknown as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst fetcher = (url: string) =>\n  axios\n    .get(url, {\n      withCredentials: true,\n    })\n    .then((res) => res.data);\n\nexport default fetcher;\n"],"names":["initialData","_useState2","useState","value","setValue","useCallback","e","target","Header","_styled","name","styles","Form","Label","Input","Button","Error","Success","LinkContainer","url","axios","withCredentials","then","res","data"],"sourceRoot":""}