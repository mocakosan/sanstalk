{"version":3,"file":"867.js","mappings":"oIAEaA,GAAWC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,qcA0BXC,GAAgBJ,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,0G,WCJ7B,QAhByB,SAAHE,GAAyC,IAAnCC,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aACpCC,GAAkBC,EAAAA,EAAAA,cAAY,SAACC,GACnCA,EAAEF,iBACJ,GAAG,IACH,OAAKH,EAIHM,EAAAA,cAACb,EAAW,CAACc,QAASL,GACpBI,EAAAA,cAAA,OAAKC,QAASJ,GACZG,EAAAA,cAACR,EAAgB,CAACS,QAASL,GAAc,KACxCD,IANE,IAUX,C,6DClBMO,EAA4C,CAAC,EA0BnD,QAzBkB,SAACC,GACjB,IAAMC,GAAaN,EAAAA,EAAAA,cAAY,WACzBK,GAAaD,EAAQC,KACvBE,QAAQC,IAAI,YACZJ,EAAQC,GAAWC,oBACZF,EAAQC,GAEnB,GAAG,CAACA,IACJ,OAAKA,GAGAD,EAAQC,KACXD,EAAQC,IAAaI,EAAAA,EAAAA,IAAG,GAADC,OAf6B,8BAelB,QAAAA,OAAOL,GAAa,CACpDM,WAAY,CAAC,eAEfJ,QAAQK,KAAK,gBAAiBP,EAAWD,EAAQC,KAO5C,CAACD,EAAQC,GAAYC,IAbnB,MAACO,EAAWP,EAcvB,C,8HC3BaQ,GAASxB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,gBAITsB,GAAMzB,EAAAA,EAAAA,GAAA,UAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,6HASNuB,GAAU1B,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,gEAQVwB,GAAY3B,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,0NAqBZyB,GAAY5B,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,kKAYZ0B,GAAgB7B,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,wBAKhB2B,GAAU9B,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,iOAaV4B,GAAQ/B,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,kmBA+CR6B,GAAahC,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,qUAqBb8B,GAAUjC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,+CAKV+B,GAAclC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,0OAmBdgC,GAAKnC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,WAILiC,GAASpC,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,6HAWTkC,GAAerC,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,0L,+BCnLfmC,GAAUtC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,oaAuBVC,GAAgBJ,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,0GCfvBoC,EAAkB,SAAHlC,GAA6D,IAAvDE,EAAQF,EAARE,SAAiBD,GAAFD,EAALmC,MAAWnC,EAAJC,MAAME,EAAYH,EAAZG,aAAciC,EAAWpC,EAAXoC,YACxDhC,GAAkBC,EAAAA,EAAAA,cAAY,SAACC,GACnCA,EAAEF,iBACJ,GAAG,IAGH,OAAKH,EAIHM,EAAAA,cAAC0B,EAAU,CAACzB,QAASL,GACnBI,EAAAA,cAAA,OAAKC,QAASJ,GACXgC,GAAe7B,EAAAA,cAACR,EAAgB,CAACS,QAASL,GAAc,KACxDD,IANE,IAUX,EAEAgC,EAAKG,aAAe,CAClBD,aAAa,GAEf,U,qKCiCA,QAhDuC,SAAHpC,GAA0D,I,IAApDC,EAAID,EAAJC,KAAME,EAAYH,EAAZG,aAAcmC,EAAyBtC,EAAzBsC,0BACQC,G,GAAZC,EAAAA,EAAAA,GAAS,I,EAAG,E,k5BAA7DC,EAAUF,EAAA,GAAEG,EAAkBH,EAAA,GAAEI,EAAaJ,EAAA,GAEpDK,GAA+BC,EAAAA,EAAAA,MAAvBnC,EAASkC,EAATlC,UACMoC,GADYF,EAAPG,SACQC,EAAAA,EAAAA,IAAsB,aAAcC,EAAAA,EAAS,CACtEC,iBAAkB,MADZC,MAGQC,GAAsBJ,EAAAA,EAAAA,IACpCF,EAAW,mBAAH/B,OAAsBL,EAAS,aAAc,KACrDuC,EAAAA,GAFMI,OAIFC,GAAkBjD,EAAAA,EAAAA,cACtB,SAACC,GACCA,EAAEiD,iBACFC,IAAAA,KACQ,mBAADzC,OACgBL,EAAS,aAC5B,CACEb,KAAM4C,GAER,CACEgB,iBAAiB,IAGpBC,MAAK,WACJpB,GAA0B,GAC1Bc,IACAT,EAAc,GAChB,IACCgB,OAAM,SAACC,GAAQ,IAAAC,EACdjD,QAAQkD,IAAIF,GACZG,EAAAA,GAAAA,MAAwB,QAAbF,EAACD,EAAII,gBAAQ,IAAAH,OAAA,EAAZA,EAAcV,KAAM,CAAEc,SAAU,iBAC9C,GACJ,GACA,CAACxB,IAEH,OACElC,EAAAA,cAAC2D,EAAAA,EAAK,CAACjE,KAAMA,EAAME,aAAcA,GAC/BI,EAAAA,cAAA,QAAM4D,SAAUb,GACd/C,EAAAA,cAAC6D,EAAAA,GAAK,CAACC,GAAG,iBACR9D,EAAAA,cAAA,YAAM,OACNA,EAAAA,cAAC+D,EAAAA,GAAK,CAACD,GAAG,UAAUE,MAAO9B,EAAY+B,SAAU9B,KAEnDnC,EAAAA,cAACkE,EAAAA,GAAM,CAACC,KAAK,UAAS,SAI9B,E,0GCHA,QA7CwC,SAAH1E,GAA4D,I,IAAtDC,EAAID,EAAJC,KAAME,EAAYH,EAAZG,aAAcwE,EAA2B3E,EAA3B2E,4BACrDjE,GAAcmC,EAAAA,EAAAA,MAAdnC,UACyD6B,G,GAAZC,EAAAA,EAAAA,GAAS,I,EAAG,E,k5BAA1DoC,EAASrC,EAAA,GAAEsC,EAAiBtC,EAAA,GAAEuC,EAAYvC,EAAA,GACnCO,GAAaE,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,GAA/CE,KACQ4B,GAAqB/B,EAAAA,EAAAA,IACnCF,EAAW,mBAAH/B,OAAsBL,EAAS,YAAa,KACpDuC,EAAAA,GAFMI,OAKF2B,GAAiB3E,EAAAA,EAAAA,cACrB,SAACC,GACCA,EAAEiD,iBACGqB,GAAcA,EAAUK,QAG7BzB,IAAAA,KACQ,mBAADzC,OAAoBL,EAAS,YAAY,CAC5CwE,MAAON,IAERlB,MAAK,WACJqB,IACAJ,GAA4B,GAC5BG,EAAa,GACf,IACCnB,OAAM,SAACwB,GAAU,IAAAC,EAChBxE,QAAQkD,IAAIqB,GACZpB,EAAAA,GAAAA,MAA0B,QAAfqB,EAACD,EAAMnB,gBAAQ,IAAAoB,OAAA,EAAdA,EAAgBjC,KAAM,CAAEc,SAAU,iBAChD,GACJ,GACA,CAACW,EAAWlE,EAAWqE,EAAkBJ,EAA6BG,IAGxE,OACEvE,EAAAA,cAAC2D,EAAAA,EAAK,CAACjE,KAAMA,EAAME,aAAcA,GAC/BI,EAAAA,cAAA,QAAM4D,SAAUa,GACdzE,EAAAA,cAAC6D,EAAAA,GAAK,CAACC,GAAG,gBACR9D,EAAAA,cAAA,YAAM,OACNA,EAAAA,cAAC+D,EAAAA,GAAK,CAACD,GAAG,SAASK,KAAK,QAAQH,MAAOK,EAAWJ,SAAUK,KAE9DtE,EAAAA,cAACkE,EAAAA,GAAM,CAACC,KAAK,UAAS,SAI9B,ECzDO,IAAMW,GAAc1F,EAAAA,EAAAA,GAAA,UAAAC,OAAA,aAAAD,CAAA,wKAYvB,SAAAK,GAAW,OAAAA,EAARsF,UACK,gDAKT,Q,6hCC8DH,QAzEmB,WACjB,IAAQ5E,GAAcmC,EAAAA,EAAAA,MAAdnC,UACMoC,GAAaE,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CAC9DC,iBAAkB,MADZC,KAGMoC,GAAevC,EAAAA,EAAAA,IAC3BF,EAAW,mBAAH/B,OAAsBL,EAAS,YAAa,KACpDuC,EAAAA,GAFME,KAIDqC,EAA8BC,GAApBC,EAAAA,EAAAA,GAAUhF,GAAU,GAAxB,GACgDiF,EAAAF,GAAfG,EAAAA,EAAAA,WAAS,GAAM,GAAtDC,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GACgBI,EAAAN,GAAtBG,EAAAA,EAAAA,UAAmB,IAAG,GAAnDI,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,GAAwB7F,EAAAA,EAAAA,cAAY,WACxCyF,GAAmB,SAACK,GAAI,OAAMA,CAAI,GACpC,GAAG,IAoBH,OAlBAC,EAAAA,EAAAA,YAAU,WACRxF,QAAQC,IAAI,wBAAyBH,GACrCuF,EAAc,GAChB,GAAG,CAACvF,KAEJ0F,EAAAA,EAAAA,YAAU,WAMR,OALAZ,SAAAA,EAAQa,GAAG,cAAc,SAAClD,GACxB8C,EAAc9C,EAChB,IAGO,WAGLqC,SAAAA,EAAQc,IAAI,aACd,CACF,GAAG,CAACd,IAGFjF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UACEA,EAAAA,cAAC8E,EAAc,CAACC,SAAUO,EAAiBrF,QAAS0F,GAClD3F,EAAAA,cAAA,KACEgG,UAAU,mKACV,UAAQ,2BACR,cAAY,UAGhBhG,EAAAA,cAAA,YAAM,oBAERA,EAAAA,cAAA,YACIsF,IACAN,aAAU,EAAVA,EAAYiB,KAAI,SAACC,GACf,IAAMC,EAAWV,EAAWW,SAASF,EAAOpC,IAC5C,OACE9D,EAAAA,cAACqG,EAAAA,GAAO,CAACC,IAAKJ,EAAOpC,GAAIyC,gBAAgB,WAAWC,GAAE,cAAAhG,OAAgBL,EAAS,QAAAK,OAAO0F,EAAOpC,KAC3F9D,EAAAA,cAAA,KACEgG,UAAS,oGAAAxF,OACP2F,EAAW,6CAA+C,4BAE5D,cAAY,OACZ,UAAQ,qBACR,wBAAsB,QACtB,0BAAwB,QACxB,uBAAqB,UAEvBnG,EAAAA,cAAA,YAAOkG,EAAOO,UACbP,EAAOpC,MAAOvB,aAAQ,EAARA,EAAUuB,KAAM9D,EAAAA,cAAA,YAAM,QAG3C,MAIV,E,0GCvBA,QAhDwB,WACtB,I,IAAQG,GAAcmC,EAAAA,EAAAA,MAAdnC,UAERuG,GAKIjE,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CACvCC,iBAAkB,MALZJ,EAAQmE,EAAd9D,KAOY+D,GANPD,EAAL9B,MAEM8B,EAAN5D,QAI4BL,EAAAA,EAAAA,IAAmBF,EAAW,mBAAH/B,OAAsBL,EAAS,aAAc,KAAMuC,EAAAA,GAApGE,MACqDwC,G,GAAfC,EAAAA,EAAAA,WAAS,G,EAAM,E,k5BAAtDC,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAEpCO,GAAwB7F,EAAAA,EAAAA,cAAY,WACxCyF,GAAmB,SAACK,GAAI,OAAMA,CAAI,GACpC,GAAG,IAEH,OACE5F,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UACEA,EAAAA,cAAC8E,EAAc,CAACC,SAAUO,EAAiBrF,QAAS0F,GAClD3F,EAAAA,cAAA,KACEgG,UAAU,mKACV,UAAQ,2BACR,cAAY,UAGhBhG,EAAAA,cAAA,YAAM,aAERA,EAAAA,cAAA,YACIsF,IACAqB,aAAW,EAAXA,EAAaV,KAAI,SAACzD,GAChB,OACExC,EAAAA,cAACqG,EAAAA,GAAO,CACNC,IAAK9D,EAAQlD,KACbiH,gBAAgB,WAChBC,GAAE,cAAAhG,OAAgBL,EAAS,aAAAK,OAAYgC,EAAQlD,OAE/CU,EAAAA,cAAA,YAAM,KAAGwC,EAAQlD,MAGvB,MAIV,E,khCCjBA,IAAMsH,GAAUC,EAAAA,EAAAA,KAAS,kBAAM,+DAAwB,IACjDC,GAAKD,EAAAA,EAAAA,KAAS,kBAAM,8DAAmB,IA2L7C,QAzLuB,WACrB,IAAuDzB,EAAAF,GAAfG,EAAAA,EAAAA,WAAS,GAAM,GAAhD0B,EAAY3B,EAAA,GAAE4B,EAAe5B,EAAA,GAC+BI,EAAAN,GAAfG,EAAAA,EAAAA,WAAS,GAAM,GAA5D4B,EAAkBzB,EAAA,GAAE0B,EAAqB1B,EAAA,GAC+B2B,EAAAjC,GAAfG,EAAAA,EAAAA,WAAS,GAAM,GAAxE+B,EAAwBD,EAAA,GAAEE,EAA2BF,EAAA,GACeG,EAAApC,GAAfG,EAAAA,EAAAA,WAAS,GAAM,GAApEkC,EAAsBD,EAAA,GAAEvF,EAAyBuF,EAAA,GACuBE,EAAAtC,GAAfG,EAAAA,EAAAA,WAAS,GAAM,GAAxEoC,EAAwBD,EAAA,GAAEpD,EAA2BoD,EAAA,GACeE,EAAAxC,GAAfG,EAAAA,EAAAA,WAAS,GAAM,GAA5CsC,GAAFD,EAAA,GAA2BA,EAAA,IACkB1F,EAAAkD,GAAZjD,EAAAA,EAAAA,GAAS,IAAG,GAAnE2F,EAAY5F,EAAA,GAAE6F,EAAoB7F,EAAA,GAAE8F,GAAe9F,EAAA,GACF+F,GAAA7C,GAAZjD,EAAAA,EAAAA,GAAS,IAAG,GAAjD+F,GAAMD,GAAA,GAAEE,GAAcF,GAAA,GAAEG,GAASH,GAAA,GAChC5H,IAAcmC,EAAAA,EAAAA,MAAdnC,UACRuG,IAA0CjE,EAAAA,EAAAA,IAAsB,aAAcC,EAAAA,GAAhEH,GAAQmE,GAAd9D,KAAuBE,IAAF4D,GAAL9B,MAAa8B,GAAN5D,QACjB6D,IAAgBlE,EAAAA,EAAAA,IAAmBF,GAAW,mBAAH/B,OAAsBL,GAAS,aAAc,KAAMuC,EAAAA,GAApGE,KACyCuF,GAAAjD,GAApBC,EAAAA,EAAAA,GAAUhF,IAAU,GAA1C8E,GAAMkD,GAAA,GAAE/H,GAAU+H,GAAA,IAEzBtC,EAAAA,EAAAA,YAAU,WAEJc,IAAepE,IAAY0C,KAC7B5E,QAAQC,IAAI2E,IACZA,GAAOmD,KAAK,QAAS,CAAEtE,GAAIvB,GAASuB,GAAIuE,SAAU1B,GAAYV,KAAI,SAACqC,GAAC,OAAKA,EAAExE,EAAE,MAEjF,GAAG,CAACmB,GAAQ0B,GAAapE,MACzBsD,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLzF,IACF,CACF,GAAG,CAACD,GAAWC,KACf,IAAMmI,IAAWzI,EAAAA,EAAAA,cAAY,WAC3BmD,IAAAA,KACQ,oBAAqB,KAAM,CAC/BC,iBAAiB,IAElBC,MAAK,WACJL,IAAO,GAAO,EAChB,GACJ,GAAG,CAACA,KAEE0F,IAAqB1I,EAAAA,EAAAA,cAAY,WACrCkH,GAAgB,SAACpB,GAAI,OAAMA,CAAI,GACjC,GAAG,IAGG6C,IAAyB3I,EAAAA,EAAAA,cAAY,WACzCuH,GAA4B,EAC9B,GAAG,IACGqB,IAAoB5I,EAAAA,EAAAA,cACxB,SAACC,GACCA,EAAEiD,iBACG4E,GAAiBA,EAAalD,QAC9BsD,IAAWA,GAAOtD,QACvBzB,IAAAA,KAEI,kBACA,CACE9C,UAAWyH,EACXe,IAAKX,IAEP,CACE9E,iBAAiB,IAGpBC,MAAK,WACJL,KAEAuE,GAA4B,GAC5BS,GAAgB,IAChBI,GAAU,GACZ,IACC9E,OAAM,SAACC,GAAQ,IAAAC,EACdjD,QAAQkD,IAAIF,GACZG,EAAAA,GAAAA,MAAwB,QAAbF,EAACD,EAAII,gBAAQ,IAAAH,OAAA,EAAZA,EAAcV,KAAM,CAAEc,SAAU,iBAC9C,GACJ,GACA,CAACkE,EAAcI,KAEXpI,IAAeE,EAAAA,EAAAA,cAAY,WAC/BuH,GAA4B,GAC5BtF,GAA0B,GAC1BqC,GAA4B,GAC5BuD,GAA0B,EAC5B,GAAG,IAEGiB,IAAuB9I,EAAAA,EAAAA,cAAY,WACvCoH,GAAsB,SAACtB,GAAI,OAAMA,CAAI,GACvC,GAAG,IAGGiD,IAAoB/I,EAAAA,EAAAA,cAAY,WACpCiC,GAA0B,EAC5B,GAAG,IAGG+G,IAAyBhJ,EAAAA,EAAAA,cAAY,WACzCsE,GAA4B,EAC9B,GAAG,IACH,OAAK7B,GAKHvC,EAAAA,cAAA,WACEA,EAAAA,cAACa,EAAM,KACLb,EAAAA,cAACY,EAAS,KACRZ,EAAAA,cAAA,QAAMC,QAASuI,IACbxI,EAAAA,cAACc,EAAU,CAACiI,IAAKC,IAAAA,IAAazG,GAASoC,MAAO,CAAEsE,EAAG,OAAQC,EAAG,UAAYC,IAAK5G,GAASkE,WACvFM,GACC/G,EAAAA,cAAC2B,EAAI,CAACC,MAAO,CAAEwH,MAAO,EAAGC,IAAK,IAAM3J,KAAMqH,EAAcnH,aAAc4I,IACpExI,EAAAA,cAACe,EAAY,KACXf,EAAAA,cAAA,OAAK+I,IAAKC,IAAAA,IAAazG,GAASkE,SAAU,CAAEwC,EAAG,OAAQC,EAAG,UAAYC,IAAK5G,GAASkE,WACpFzG,EAAAA,cAAA,WACEA,EAAAA,cAAA,QAAM8D,GAAG,gBAAgBvB,GAASkE,UAClCzG,EAAAA,cAAA,QAAM8D,GAAG,kBAAiB,YAG9B9D,EAAAA,cAACgB,EAAY,CAACf,QAASsI,IAAU,YAO3CvI,EAAAA,cAACiB,EAAgB,KACfjB,EAAAA,cAACkB,EAAU,KACRqB,cAAQ,EAARA,GAAUrB,WAAW+E,KAAI,SAACqD,GACzB,OACEtJ,EAAAA,cAACuJ,EAAAA,GAAI,CAACjD,IAAKgD,EAAGxF,GAAI0C,GAAE,cAAAhG,OAAgB,IAAG,gBACrCR,EAAAA,cAACyB,EAAe,KAAE6H,EAAGhK,KAAKkK,MAAM,EAAG,GAAGC,eAG5C,IACAzJ,EAAAA,cAACwB,EAAS,CAACvB,QAASwI,IAAwB,MAE9CzI,EAAAA,cAACmB,EAAQ,KACPnB,EAAAA,cAACoB,EAAa,CAACnB,QAAS2I,IAAsB,YAC9C5I,EAAAA,cAACqB,EAAU,KACTrB,EAAAA,cAAC2B,EAAI,CAACjC,KAAMuH,EAAoBrH,aAAcgJ,GAAsBhH,MAAO,CAAEyH,IAAK,GAAIK,KAAM,KAC1F1J,EAAAA,cAACsB,EAAc,KACbtB,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,UAAQC,QAAS6I,IAAwB,kBACzC9I,EAAAA,cAAA,UAAQC,QAAS4I,IAAmB,UACpC7I,EAAAA,cAAA,UAAQC,QAASsI,IAAU,UAG/BvI,EAAAA,cAAC2J,EAAW,MACZ3J,EAAAA,cAAC4J,EAAM,QAGX5J,EAAAA,cAACuB,EAAK,KACJvB,EAAAA,cAAC6J,EAAAA,GAAM,KACL7J,EAAAA,cAAC8J,EAAAA,GAAK,CAACC,KAAK,yCAAyCC,UAAWpD,IAChE5G,EAAAA,cAAC8J,EAAAA,GAAK,CAACC,KAAK,+BAA+BC,UAAWlD,OAI5D9G,EAAAA,cAAC2D,EAAAA,EAAK,CAACjE,KAAM0H,EAA0BxH,aAAcA,IACnDI,EAAAA,cAAA,QAAM4D,SAAU8E,IACd1I,EAAAA,cAAC6D,EAAAA,GAAK,CAACC,GAAG,mBACR9D,EAAAA,cAAA,YAAM,aACNA,EAAAA,cAAC+D,EAAAA,GAAK,CAACD,GAAG,YAAYE,MAAO4D,EAAc3D,SAAU4D,KAEvD7H,EAAAA,cAAC6D,EAAAA,GAAK,CAACC,GAAG,uBACR9D,EAAAA,cAAA,YAAM,aACNA,EAAAA,cAAC+D,EAAAA,GAAK,CAACD,GAAG,YAAYE,MAAOgE,GAAQ/D,SAAUgE,MAEjDjI,EAAAA,cAACkE,EAAAA,GAAM,CAACC,KAAK,UAAS,UAG1BnE,EAAAA,cAACiK,EAAkB,CACjBvK,KAAM6H,EACN3H,aAAcA,GACdmC,0BAA2BA,IAE7B/B,EAAAA,cAACkK,EAAoB,CACnBxK,KAAM+H,EACN7H,aAAcA,GACdwE,4BAA6BA,KA9E1BpE,EAAAA,cAACmK,EAAAA,GAAQ,CAAC3D,GAAG,UAuFxB,C","sources":["webpack://sanstalk/./components/Modal/styles.tsx","webpack://sanstalk/./components/Modal/index.tsx","webpack://sanstalk/./hooks/useSocket.ts","webpack://sanstalk/./layouts/Workspace/styles.tsx","webpack://sanstalk/./components/Menu/styles.tsx","webpack://sanstalk/./components/Menu/index.tsx","webpack://sanstalk/./components/CreateChannelModal/index.tsx","webpack://sanstalk/./components/InviteWorkspaceModal/index.tsx","webpack://sanstalk/./components/DMList/styles.tsx","webpack://sanstalk/./components/DMList/index.tsx","webpack://sanstalk/./components/ChannelList/index.tsx","webpack://sanstalk/./layouts/Workspace/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CloseModalButton, CreateModal } from '@components/Modal/styles';\nimport React, { FC, useCallback } from 'react';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n}\n\nconst Modal: FC<Props> = ({ show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\nexport default Modal;\n","import { useCallback } from 'react';\nimport io, { Socket } from 'socket.io-client';\n\nconst backUrl = process.env.NODE_ENV === 'production' ? 'https://sleact.nodebird.com' : 'http://localhost:3095';\n\nconst sockets: { [key: string]: typeof Socket } = {};\nconst useSocket = (workspace?: string): [typeof Socket | undefined, () => void] => {\n  const disconnect = useCallback(() => {\n    if (workspace && sockets[workspace]) {\n      console.log('소켓 연결 끊음');\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, [workspace]);\n  if (!workspace) {\n    return [undefined, disconnect];\n  }\n  if (!sockets[workspace]) {\n    sockets[workspace] = io(`${backUrl}/ws-${workspace}`, {\n      transports: ['websocket'],\n    });\n    console.info('create socket', workspace, sockets[workspace]);\n    // sockets[workspace].on('connect_error', (err) => {\n    //   console.error(err);\n    //   console.log(`connect_error due to ${err.message}`);\n    // });\n  }\n\n  return [sockets[workspace], disconnect];\n};\n\nexport default useSocket;\n","import styled from '@emotion/styled';\n\nexport const RightMenu = styled.div`\n  float: right;\n`;\n\nexport const Header = styled.header`\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`;\n\nexport const ProfileModal = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    display: flex;\n  }\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Workspaces = styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`;\n\nexport const Channels = styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n    &.selected {\n      color: white;\n    }\n  }\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`;\n\nexport const WorkspaceName = styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const MenuScroll = styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`;\n\nexport const WorkspaceModal = styled.div`\n  padding: 10px 0 0;\n  & h2 {\n    padding-left: 20px;\n  }\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`;\n\nexport const Chats = styled.div`\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`;\n","import styled from '@emotion/styled';\n\nexport const CreateMenu = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import React, { CSSProperties, FC, useCallback } from 'react';\nimport { CloseModalButton, CreateMenu } from './styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  style: CSSProperties;\n  closeButton?: boolean;\n}\n\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  //show가 false면 화면에서 안보이게\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateMenu onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\n        {children}\n      </div>\n    </CreateMenu>\n  );\n};\n\nMenu.defaultProps = {\n  closeButton: true,\n};\nexport default Menu;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Label, Input, Button } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { VFC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowCreateChannelModal: (flag: boolean) => void;\n}\n\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\n  //Workspace에 switch route 파라미터에있는 데이터를 useParams를 통해 가져올수 있다\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const { data: userData } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n  const { mutate: revalidateChannel } = useSWR<IChannel[]>(\n    userData ? `/api/workspaces/${workspace}/channels` : null,\n    fetcher,\n  );\n  const onCreateChannel = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .post(\n          `/api/workspaces/${workspace}/channels`,\n          {\n            name: newChannel,\n          },\n          {\n            withCredentials: true,\n          },\n        )\n        .then(() => {\n          setShowCreateChannelModal(false);\n          revalidateChannel(); //채널 생성하자마자 채널리스트 다시 불러오기\n          setNewChannel('');\n        })\n        .catch((err) => {\n          console.dir(err);\n          toast.error(err.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newChannel],\n  );\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onCreateChannel}>\n        <Label id=\"channel-label\">\n          <span>채널 </span>\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\n        </Label>\n        <Button type=\"submit\">생성하기</Button>\n      </form>\n    </Modal>\n  );\n};\nexport default CreateChannelModal;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\n}\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: revalidateMember } = useSWR<IUser[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/members`, {\n          email: newMember,\n        })\n        .then(() => {\n          revalidateMember();\n          setShowInviteWorkspaceModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newMember, workspace, revalidateMember, setShowInviteWorkspaceModal, setNewMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>이메일</span>\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteWorkspaceModal;\n","import styled from '@emotion/styled';\n\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n\n  ${({ collapse }) =>\n    collapse &&\n    `\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","import { CollapseButton } from '@components/DMList/styles';\nimport useSocket from '@hooks/useSocket';\nimport { IUser, IUserWithOnline } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst DMList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    console.log('DMList: workspace 바꼈다', workspace);\n    setOnlineList([]);\n  }, [workspace]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    // socket?.on('dm', onMessage);\n    // console.log('socket on dm', socket?.hasListeners('dm'), socket);\n    return () => {\n      // socket?.off('dm', onMessage);\n      // console.log('socket off dm', socket?.hasListeners('dm'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Direct Messages</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          memberData?.map((member) => {\n            const isOnline = onlineList.includes(member.id);\n            return (\n              <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\n                <i\n                  className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\n                    isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n                  }`}\n                  aria-hidden=\"true\"\n                  data-qa=\"presence_indicator\"\n                  data-qa-presence-self=\"false\"\n                  data-qa-presence-active=\"false\"\n                  data-qa-presence-dnd=\"false\"\n                />\n                <span>{member.nickname}</span>\n                {member.id === userData?.id && <span> (나)</span>}\n              </NavLink>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default DMList;\n","// import useSocket from '@hooks/useSocket';\nimport { CollapseButton } from '@components/DMList/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst ChannelList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  // const [socket] = useSocket(workspace);\n  const {\n    data: userData,\n    error,\n\n    mutate,\n  } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Channels</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          channelData?.map((channel) => {\n            return (\n              <NavLink\n                key={channel.name}\n                activeClassName=\"selected\"\n                to={`/workspace/${workspace}/channel/${channel.name}`}\n              >\n                <span># {channel.name}</span>\n              </NavLink>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default ChannelList;\n","import fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { VFC, useCallback, useEffect, useState } from 'react';\nimport { Redirect, Route, Switch, useParams } from 'react-router';\nimport useSWR from 'swr';\nimport {\n  AddButton,\n  Channels,\n  Chats,\n  Header,\n  LogOutButton,\n  MenuScroll,\n  ProfileImg,\n  ProfileModal,\n  RightMenu,\n  WorkspaceButton,\n  WorkspaceModal,\n  WorkspaceName,\n  Workspaces,\n  WorkspaceWrapper,\n} from '@layouts/Workspace/styles';\nimport gravatar from 'gravatar';\nimport loadable from '@loadable/component';\nimport Menu from '@components/Menu';\nimport Modal from '@components/Modal';\nimport { Link } from 'react-router-dom';\nimport { IChannel, IUser } from '@typings/db';\nimport { Label, Input, Button } from '@pages/SignUp/styles';\nimport useInput from '@hooks/useInput';\nimport { toast } from 'react-toastify';\nimport CreateChannelModal from '@components/CreateChannelModal';\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\nimport InviteChannelModal from '@components/InviteChannelModal';\nimport DMList from '@components/DMList';\nimport ChannelList from '@components/ChannelList';\nimport { disconnect } from 'process';\nimport useSocket from '@hooks/useSocket';\n\nconst Channel = loadable(() => import('@pages/Channel'));\nconst DM = loadable(() => import('@pages/DM'));\n\nconst Workspace: VFC = () => {\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\n  const [showCreateWorkSpaceModal, setShowCreateWorkspaceModal] = useState(false);\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkSpace] = useInput('');\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\n  const { workspace } = useParams<{ workspace: string }>();\n  const { data: userData, error, mutate } = useSWR<IUser | false>('/api/users', fetcher);\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n  const [socket, disconnect] = useSocket(workspace);\n\n  useEffect(() => {\n    //채널 데이터랑 유저아이디,socket이 존재하는경우\n    if (channelData && userData && socket) {\n      console.log(socket);\n      socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\n    }\n  }, [socket, channelData, userData]);\n  useEffect(() => {\n    return () => {\n      disconnect();\n    };\n  }, [workspace, disconnect]);\n  const onLogout = useCallback(() => {\n    axios\n      .post('/api/users/logout', null, {\n        withCredentials: true,\n      })\n      .then(() => {\n        mutate(false, false);\n      });\n  }, [mutate]);\n  //프로필사진을 누르면 사용자 메뉴 나오는 토글 버튼\n  const onClickUserProfile = useCallback(() => {\n    setShowUserMenu((prev) => !prev);\n  }, []);\n\n  //워크스페이스 생성 모달\n  const onClickCreateWorkspace = useCallback(() => {\n    setShowCreateWorkspaceModal(true);\n  }, []);\n  const onCreateWorkspace = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newWorkspace || !newWorkspace.trim()) return;\n      if (!newUrl || !newUrl.trim()) return;\n      axios\n        .post(\n          '/api/workspaces',\n          {\n            workspace: newWorkspace,\n            url: newUrl,\n          },\n          {\n            withCredentials: true,\n          },\n        )\n        .then(() => {\n          mutate();\n          //완료되고 나면 input창들 다비우기\n          setShowCreateWorkspaceModal(false);\n          setNewWorkSpace('');\n          setNewUrl('');\n        })\n        .catch((err) => {\n          console.dir(err);\n          toast.error(err.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newWorkspace, newUrl],\n  );\n  const onCloseModal = useCallback(() => {\n    setShowCreateWorkspaceModal(false);\n    setShowCreateChannelModal(false);\n    setShowInviteWorkspaceModal(false);\n    setShowInviteChannelModal(false);\n  }, []);\n\n  const toggleWorkspaceModal = useCallback(() => {\n    setShowWorkspaceModal((prev) => !prev);\n  }, []);\n\n  //채널 추가 모달\n  const onClickAddChannel = useCallback(() => {\n    setShowCreateChannelModal(true);\n  }, []);\n\n  //워크스페이스 초대 모달\n  const onClickInviteWorkspace = useCallback(() => {\n    setShowInviteWorkspaceModal(true);\n  }, []);\n  if (!userData) {\n    //로그아웃 버튼을 누르는순간 data가 false가 되니까 로그인 페이지로 이동\n    return <Redirect to=\"/login\" />;\n  }\n  return (\n    <div>\n      <Header>\n        <RightMenu>\n          <span onClick={onClickUserProfile}>\n            <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\n            {showUserMenu && (\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onClickUserProfile}>\n                <ProfileModal>\n                  <img src={gravatar.url(userData.nickname, { s: '28px', d: 'retro' })} alt={userData.nickname} />\n                  <div>\n                    <span id=\"profile-name\">{userData.nickname}</span>\n                    <span id=\"profile-active\">Active</span>\n                  </div>\n                </ProfileModal>\n                <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\n              </Menu>\n            )}\n          </span>\n        </RightMenu>\n      </Header>\n\n      <WorkspaceWrapper>\n        <Workspaces>\n          {userData?.Workspaces.map((ws) => {\n            return (\n              <Link key={ws.id} to={`/workspace/${123}/channel/일반`}>\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\n              </Link>\n            );\n          })}\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\n        </Workspaces>\n        <Channels>\n          <WorkspaceName onClick={toggleWorkspaceModal}>Sanstalk</WorkspaceName>\n          <MenuScroll>\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n              <WorkspaceModal>\n                <h2>Sanstalk</h2>\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\n                <button onClick={onClickAddChannel}>채널 만들기</button>\n                <button onClick={onLogout}>로그아웃</button>\n              </WorkspaceModal>\n            </Menu>\n            <ChannelList />\n            <DMList />\n          </MenuScroll>\n        </Channels>\n        <Chats>\n          <Switch>\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DM} />\n          </Switch>\n        </Chats>\n      </WorkspaceWrapper>\n      <Modal show={showCreateWorkSpaceModal} onCloseModal={onCloseModal}>\n        <form onSubmit={onCreateWorkspace}>\n          <Label id=\"workspace-label\">\n            <span>워크스페이스 이름</span>\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n          </Label>\n          <Label id=\"workspace-url-label\">\n            <span>워크스페이스 이름</span>\n            <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\n          </Label>\n          <Button type=\"submit\">생성하기</Button>\n        </form>\n      </Modal>\n      <CreateChannelModal\n        show={showCreateChannelModal}\n        onCloseModal={onCloseModal}\n        setShowCreateChannelModal={setShowCreateChannelModal}\n      />\n      <InviteWorkspaceModal\n        show={showInviteWorkspaceModal}\n        onCloseModal={onCloseModal}\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n      />\n      {/* <InviteChannelModal\n        show={showInviteChannelModal}\n        onCloseModal={onCloseModal}\n        setShowInviteChannelModal={setShowInviteChannelModal}\n      /> */}\n    </div>\n  );\n};\n\nexport default Workspace;\n"],"names":["CreateModal","_styled","target","name","styles","CloseModalButton","_ref","show","children","onCloseModal","stopPropagation","useCallback","e","React","onClick","sockets","workspace","disconnect","console","log","io","concat","transports","info","undefined","RightMenu","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","CreateMenu","Menu","style","closeButton","defaultProps","setShowCreateChannelModal","_useInput2","useInput","newChannel","onChangeNewChannel","setNewChannel","_useParams","useParams","userData","channel","useSWR","fetcher","dedupingInterval","data","revalidateChannel","mutate","onCreateChannel","preventDefault","axios","withCredentials","then","catch","err","_err$response","dir","toast","response","position","Modal","onSubmit","Label","id","Input","value","onChange","Button","type","setShowInviteWorkspaceModal","newMember","onChangeNewMember","setNewMember","revalidateMember","onInviteMember","trim","email","error","_error$response","CollapseButton","collapse","memberData","socket","_slicedToArray","useSocket","_useState2","useState","channelCollapse","setChannelCollapse","_useState4","onlineList","setOnlineList","toggleChannelCollapse","prev","useEffect","on","off","className","map","member","isOnline","includes","NavLink","key","activeClassName","to","nickname","_useSWR","channelData","Channel","loadable","DM","showUserMenu","setShowUserMenu","showWorkspaceModal","setShowWorkspaceModal","_useState6","showCreateWorkSpaceModal","setShowCreateWorkspaceModal","_useState8","showCreateChannelModal","_useState10","showInviteWorkspaceModal","_useState12","setShowInviteChannelModal","newWorkspace","onChangeNewWorkspace","setNewWorkSpace","_useInput4","newUrl","onChangeNewUrl","setNewUrl","_useSocket2","emit","channels","v","onLogout","onClickUserProfile","onClickCreateWorkspace","onCreateWorkspace","url","toggleWorkspaceModal","onClickAddChannel","onClickInviteWorkspace","src","gravatar","s","d","alt","right","top","ws","Link","slice","toUpperCase","left","ChannelList","DMList","Switch","Route","path","component","CreateChannelModal","InviteWorkspaceModal","Redirect"],"sourceRoot":""}