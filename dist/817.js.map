{"version":3,"file":"817.js","mappings":"wvCAiEA,QAzDc,WACZ,IAAAA,GAA0CC,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAAjDC,EAAQH,EAAdI,KAAgBC,EAAKL,EAALK,MAAOC,EAAMN,EAANM,OAC/BC,QAAQC,IAAIL,GACZ,IAA2CM,EAAAC,GAAZC,EAAAA,EAAAA,GAAS,IAAG,GAApCC,EAAKH,EAAA,GAAEI,EAAaJ,EAAA,GACsBK,EAAAJ,GAAZC,EAAAA,EAAAA,GAAS,IAAG,GAA1CI,EAAQD,EAAA,GAAEE,EAAgBF,EAAA,GACkBG,EAAAP,GAAfQ,EAAAA,EAAAA,WAAS,GAAM,GAA5CC,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC1BI,GAAWC,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEC,iBACFJ,GAAc,GACdK,IAAAA,KAEI,mBACA,CAAEb,MAAAA,EAAOG,SAAAA,GACT,CACEW,iBAAiB,IAGpBC,MAAK,SAACC,GACLtB,GACF,IACCuB,OAAM,SAACxB,GAAU,IAAAyB,EAChBV,EAAyC,OAAb,QAAdU,EAAAzB,EAAM0B,gBAAQ,IAAAD,OAAA,EAAdA,EAAgBE,QAChC,GACJ,GACA,CAACpB,EAAOG,EAAUT,IAEpB,OAAKD,GAASF,GACZI,QAAQC,IAAI,OAAQL,GACb8B,EAAAA,cAACC,EAAAA,GAAQ,CAACC,GAAG,kCAGpBF,EAAAA,cAAA,OAAKG,GAAG,aACNH,EAAAA,cAACI,EAAAA,GAAM,KAAC,UACRJ,EAAAA,cAACK,EAAAA,GAAI,CAACjB,SAAUA,GACdY,EAAAA,cAACM,EAAAA,GAAK,CAACH,GAAG,eACRH,EAAAA,cAAA,YAAM,UACNA,EAAAA,cAAA,WACEA,EAAAA,cAACO,EAAAA,GAAK,CAACC,KAAK,QAAQL,GAAG,QAAQM,KAAK,QAAQC,MAAO/B,EAAOgC,SAAU/B,MAGxEoB,EAAAA,cAACM,EAAAA,GAAK,CAACH,GAAG,kBACRH,EAAAA,cAAA,YAAM,QACNA,EAAAA,cAAA,WACEA,EAAAA,cAACO,EAAAA,GAAK,CAACC,KAAK,WAAWL,GAAG,WAAWM,KAAK,WAAWC,MAAO5B,EAAU6B,SAAU5B,KAEjFG,GAAcc,EAAAA,cAACY,EAAAA,GAAK,KAAC,6BAExBZ,EAAAA,cAACa,EAAAA,GAAM,CAACL,KAAK,UAAS,QAExBR,EAAAA,cAACc,EAAAA,GAAa,KAAC,iBAEbd,EAAAA,cAACe,EAAAA,GAAI,CAACb,GAAG,WAAU,cAI3B,C","sources":["webpack://sanstalk/./pages/Login/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from '@pages/SignUp/styles';\nimport useInput from '@hooks/useInput';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\n\nconst LogIn = () => {\n  const { data: userData, error, mutate } = useSWR('/api/users', fetcher);\n  console.log(userData);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const [logInError, setLogInError] = useState(false);\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post(\n          '/api/users/login',\n          { email, password },\n          {\n            withCredentials: true,\n          },\n        )\n        .then((res) => {\n          mutate(); //OPTIMISTIC UI (true) : 먼저 성공했다고 생각하고나서 점검하는것\n        })\n        .catch((error) => {\n          setLogInError(error.response?.status === 401);\n        });\n    },\n    [email, password, mutate],\n  );\n  if (!error && userData) {\n    console.log('로그인됨', userData);\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  }\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <Link to=\"/signup\">회원가입 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\nexport default LogIn;\n"],"names":["_useSWR","useSWR","fetcher","userData","data","error","mutate","console","log","_useInput2","_slicedToArray","useInput","email","onChangeEmail","_useInput4","password","onChangePassword","_useState2","useState","logInError","setLogInError","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","res","catch","_error$response","response","status","React","Redirect","to","id","Header","Form","Label","Input","type","name","value","onChange","Error","Button","LinkContainer","Link"],"sourceRoot":""}