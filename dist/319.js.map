{"version":3,"file":"319.js","mappings":"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","sources":["webpack://sanstalk/./pages/SignUp/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from './styles';\nimport useInput from '@hooks/useInput';\nimport axios from 'axios';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\n\nconst SignUp = () => {\n  //revalidate : 서버에 요청을 다시 보내서 데이터를 다시 가져오는거 , mutate : 서버에 요청을 다시 안보내고 저장하는거\n  const { data, error, mutate } = useSWR('/api/users', fetcher);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, , setPassword] = useInput('');\n  const [passwordCheck, , setPasswordCheck] = useInput('');\n  const [mismatchError, setMismatchError] = useState(false);\n  const [signUpError, setSignUpError] = useState('');\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\n  //useCallback으로 감싸지 않으면 함수들이 매번 재생성 되어서 리렌더링이 계속 일어남\n\n  const onChangePassword = useCallback(\n    (e) => {\n      setPassword(e.target.value);\n      setMismatchError(e.target.value !== passwordCheck);\n    },\n    [passwordCheck],\n  );\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setMismatchError(e.target.value !== password);\n    },\n    [password],\n  );\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!mismatchError) {\n        console.log('서버로 회원가입하기');\n        setSignUpSuccess(false);\n        axios\n          .post('/api/users', { email, nickname, password })\n          .then((res) => {\n            console.log(res);\n            setSignUpSuccess(true);\n          })\n          .catch((error) => {\n            console.log(error.response);\n            setSignUpError(error.response.data);\n          })\n          .finally(() => {});\n      }\n      try {\n      } catch (err) {\n      } finally {\n      }\n    },\n    [email, nickname, password, passwordCheck, mismatchError],\n  );\n  //return은 항상 hooks보다 아래있어야함 위에있으면 에러남\n  if (data === undefined) {\n    return <div>로딩중...</div>;\n  }\n  if (data) {\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"nickname-label\">\n          <span>닉네임</span>\n          <div>\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n        </Label>\n        <Label id=\"password-check-label\">\n          <span>비밀번호 확인</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password-check\"\n              name=\"password-check\"\n              value={passwordCheck}\n              onChange={onChangePasswordCheck}\n            />\n          </div>\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\n          {signUpError && <Error>{signUpError}</Error>}\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\n        </Label>\n        <Button type=\"submit\">회원가입</Button>\n      </Form>\n      <LinkContainer>\n        이미 회원이신가요?&nbsp;\n        <Link to=\"/login\">로그인 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\nexport default SignUp;\n"],"names":["_useSWR","useSWR","fetcher","data","_useInput2","error","mutate","_slicedToArray","useInput","email","onChangeEmail","_useInput4","nickname","onChangeNickname","_useInput6","password","setPassword","_useInput8","passwordCheck","setPasswordCheck","_useState2","useState","mismatchError","setMismatchError","_useState4","signUpError","setSignUpError","_useState6","signUpSuccess","setSignUpSuccess","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","console","log","axios","then","res","catch","response","finally","undefined","React","Redirect","to","id","Header","Form","Label","Input","type","name","onChange","Error","Success","Button","LinkContainer","Link"],"sourceRoot":""}